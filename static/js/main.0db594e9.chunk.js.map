{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList/ContactList.jsx","App.styled.jsx","App.jsx","index.js"],"names":["Form","styled","form","ContactForm","state","name","number","handleSubmit","e","preventDefault","props","availabilityСheck","contactAdding","id","uuidv4","setState","this","handleChange","onSubmit","type","pattern","title","required","onChange","bind","value","Component","Label","label","Filter","filter","ContactItem","ContactList","contacts","map","Container","div","App","contactsFiltering","key","toLowerCase","includes","newContact","inputName","find","alert","target","trim","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0db594e9.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  width: 300px;\n  border: 2px solid #000;\n\n  label {\n    display: flex;\n    flex-direction: column;\n\n    &:not(:first-of-type) {\n      margin-top: 10px;\n    }\n  }\n\n  input {\n    margin-top: 4px;\n    width: 160px;\n\n    &:focus {\n      border: 2px solid #286fe0;\n      outline: none;\n    }\n  }\n\n  button {\n    margin-top: 20px;\n    padding: 4px;\n    max-width: 100px;\n    border: 0.2px solid #b7b7b7;\n    border-radius: 3px;\n    cursor: pointer;\n    transition: box-shadow 250ms linear, -webkit-box-shadow 250ms linear,\n      -moz-box-shadow 250ms linear;\n\n    &:hover {\n      -webkit-box-shadow: 0px 1px 3px 2px rgba(34, 60, 80, 0.2);\n      -moz-box-shadow: 0px 1px 3px 2px rgba(34, 60, 80, 0.2);\n      box-shadow: 0px 1px 3px 2px rgba(34, 60, 80, 0.2);\n    }\n\n    &:active {\n      color: #fff;\n      background-color: #286fe0;\n    }\n  }\n`;\n\nexport { Form };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Form } from './ContactForm.styled';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  /*метод для обработки сабмита формы*/\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const {\n      state: { name, number },\n      props: { availabilityСheck, contactAdding },\n    } = this;\n\n    if (availabilityСheck(name) || !name || !number) {\n      return;\n    }\n\n    contactAdding({ id: uuidv4(), name, number });\n    this.setState({ name: '', number: '' });\n  };\n\n  /*метод для формирования разметки*/\n  render() {\n    const {\n      state: { name, number },\n      handleSubmit,\n      props: { handleChange },\n    } = this;\n\n    return (\n      <Form onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChange.bind(this)}\n            value={name}\n          />\n        </label>\n        <label>\n          Phone number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChange.bind(this)}\n            value={number}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </Form>\n    );\n  }\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  availabilityСheck: PropTypes.func.isRequired,\n  contactAdding: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  input {\n    margin-top: 4px;\n    width: 160px;\n\n    &:focus {\n      border: 2px solid #286fe0;\n      outline: none;\n    }\n  }\n`;\n\nexport { Label };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from './Filter.styled';\n\nconst Filter = ({ filter, handleChange }) => {\n  return (\n    <Label>\n      Find contacts by name\n      <input type=\"text\" name=\"filter\" onChange={handleChange} value={filter} />\n    </Label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ name, number }) => {\n  return <li>{`${name}: ${number}`}</li>;\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem key={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n};\n","import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  padding: 60px;\n`;\n\nexport { Container };\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport { Container } from './App.styled';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  /*метод для фильтрации контактов*/\n  contactsFiltering = key => {\n    return this.state.contacts.filter(({ name }) =>\n      name.toLowerCase().includes(key.toLowerCase()),\n    );\n  };\n\n  /*метод для добавления елемента в контакты*/\n  contactAdding = newContact => {\n    this.setState(({ contacts, filter }) => ({\n      contacts: [...contacts, newContact],\n      filter,\n    }));\n  };\n\n  /*метод для проверки присутствия контакта с указанным именем*/\n  availabilityСheck = inputName => {\n    const existingСontact = this.state.contacts.find(\n      ({ name }) => name.toLowerCase() === inputName.toLowerCase(),\n    );\n\n    if (existingСontact) {\n      alert(`${inputName} is already in contacts`);\n      return true;\n    }\n    return false;\n  };\n\n  /*метод для обработки введения данных в input*/\n  handleChange(e) {\n    const name = e.target.name;\n    this.setState({ [name]: e.target.value.trim() });\n  }\n\n  /*метод для формирования разметки*/\n  render() {\n    const {\n      state: { filter },\n      handleChange,\n      availabilityСheck,\n      contactsFiltering,\n      contactAdding,\n    } = this;\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm\n          handleChange={handleChange}\n          availabilityСheck={availabilityСheck}\n          contactAdding={contactAdding}\n        />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} handleChange={handleChange.bind(this)} />\n        <ContactList contacts={contactsFiltering(filter)} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
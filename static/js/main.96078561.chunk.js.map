{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["Form","styled","form","ContactForm","name","number","handleChange","handleSubmit","onSubmit","type","pattern","title","required","onChange","value","Label","label","Filter","filter","ContactItem","ContactList","contacts","map","id","App","state","contactsFiltering","key","toLowerCase","includes","availabilityСheck","inputName","find","alert","e","preventDefault","setState","newContact","uuidv4","target","trim","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96078561.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  width: 300px;\n  border: 2px solid #000;\n\n  label {\n    display: flex;\n    flex-direction: column;\n\n    &:not(:first-of-type) {\n      margin-top: 10px;\n    }\n  }\n\n  input {\n    margin-top: 4px;\n    width: 160px;\n\n    &:focus {\n      border: 2px solid #286fe0;\n      outline: none;\n    }\n  }\n\n  button {\n    margin-top: 20px;\n    padding: 4px;\n    max-width: 100px;\n    border: 0.2px solid #b7b7b7;\n    border-radius: 3px;\n    cursor: pointer;\n    transition: box-shadow 250ms linear, -webkit-box-shadow 250ms linear,\n      -moz-box-shadow 250ms linear;\n\n    &:hover {\n      -webkit-box-shadow: 0px 1px 3px 2px rgba(34, 60, 80, 0.2);\n      -moz-box-shadow: 0px 1px 3px 2px rgba(34, 60, 80, 0.2);\n      box-shadow: 0px 1px 3px 2px rgba(34, 60, 80, 0.2);\n    }\n\n    &:active {\n      color: #fff;\n      background-color: #286fe0;\n    }\n  }\n`;\n\nexport { Form };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from './ContactForm.styled';\n\nconst ContactForm = ({ name, number, handleChange, handleSubmit }) => {\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n      <label>\n        Phone number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  input {\n    margin-top: 4px;\n    width: 160px;\n\n    &:focus {\n      border: 2px solid #286fe0;\n      outline: none;\n    }\n  }\n`;\n\nexport { Label };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from './Filter.styled';\n\nconst Filter = ({ filter, handleChange }) => {\n  return (\n    <Label>\n      Find contacts by name\n      <input type=\"text\" name=\"filter\" onChange={handleChange} value={filter} />\n    </Label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ name, number }) => {\n  return <li>{`${name}: ${number}`}</li>;\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem key={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n};\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  /*метод для фильтрации контактов*/\n  contactsFiltering = (key) => {\n    return this.state.contacts.filter(({ name }) =>\n      name.toLowerCase().includes(key.toLowerCase()),\n    );\n  };\n\n  /*метод для проверки присутствия контакта с указанным именем*/\n  availabilityСheck = inputName => {\n    const existingСontact = this.state.contacts.find(\n      ({ name }) => name.toLowerCase() === inputName.toLowerCase(),\n    );\n\n    if (existingСontact) {\n      alert(`${inputName} is already in contacts`);\n      return true;\n    }\n    return false;\n  };\n\n  /*метод для обработки сабмита формы*/\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { state: { name, number }, availabilityСheck } = this;\n\n    if (!name || !number) {\n      return;\n    }\n\n    if (availabilityСheck(name)) {\n      return;\n    }\n\n    this.setState(({ contacts, name, number }) => {\n      const newContact = {\n        id: uuidv4(),\n        name,\n        number,\n      };\n\n      return {\n        contacts: [...contacts, newContact],\n        filter: '',\n        name: '',\n        number: '',\n      };\n    });\n  };\n\n  /*метод для обработки введения данных в input*/\n  handleChange = e => {\n    const name = e.target.name;\n    this.setState({ [name]: e.target.value.trim() });\n  };\n\n  /*метод для формирования разметки*/\n  render() {\n    const {\n      state: { filter, name, number },\n      handleChange,\n      handleSubmit,\n      contactsFiltering,\n    } = this;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          name={name}\n          number={number}\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n        />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} handleChange={handleChange} />\n        <ContactList contacts={contactsFiltering(filter)} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["Form","styled","form","ContactForm","name","number","onInputChange","onSubmitButtonClick","action","type","pattern","title","required","onChange","value","onClick","Label","label","Filter","filter","ContactItem","contacts","map","id","ContactList","App","state","key","arrayOfObjects","elem","toLowerCase","includes","e","preventDefault","setState","contactToAdd","uuidv4","target","trim","filteredContacts","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAEMA,EAAOC,IAAOC,KAAV,28B,OCoCKC,EAlCK,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,cAAeC,EAA0B,EAA1BA,oBAClD,OACE,eAACP,EAAD,CAAMQ,OAAO,SAAb,UACE,yCAEE,uBACEC,KAAK,OACLL,KAAK,OACLM,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUP,EACVQ,MAAOV,OAGX,iDAEE,uBACEK,KAAK,MACLL,KAAK,SACLM,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUP,EACVQ,MAAOT,OAGX,wBAAQI,KAAK,SAASM,QAASR,EAA/B,6BC7BAS,EAAQf,IAAOgB,MAAV,oNCgBIC,EAdA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQb,EAAoB,EAApBA,cACxB,OACE,eAACU,EAAD,mCAEE,uBACEP,KAAK,OACLL,KAAK,SACLS,SAAUP,EACVQ,MAAOK,QCHAC,EANK,SAAC,GACnB,OADoC,EAAfC,SACLC,KAAI,gBAAGC,EAAH,EAAGA,GAAInB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OAClB,uCAAiBD,EAAjB,aAA0BC,IAAjBkB,OCOEC,EARK,SAAC,GAAkB,IAAhBH,EAAe,EAAfA,SACrB,OACE,6BACE,cAAC,EAAD,CAAaA,SAAUA,O,QCsEdI,E,4MAtEbC,MAAQ,CACNL,SAAU,CACR,CAAEE,GAAI,OAAQnB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEkB,GAAI,OAAQnB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEkB,GAAI,OAAQnB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEkB,GAAI,OAAQnB,KAAM,iBAAkBC,OAAQ,cAEhDc,OAAQ,GACRf,KAAM,GACNC,OAAQ,I,EAGVc,OAAS,SAACQ,EAAKC,GACb,OAAOA,EAAeT,QAAO,SAAAU,GAAI,OAC/BA,EAAKzB,KAAK0B,cAAcC,SAASJ,EAAIG,mB,EAIzCvB,oBAAsB,SAAAyB,GACpBA,EAAEC,iBAEF,EAAKC,UAAS,YAAiC,IAA9Bb,EAA6B,EAA7BA,SAAUjB,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC/B,GAAKD,GAASC,EAAd,CAIA,IAAM8B,EAAe,CACnBZ,GAAIa,cACJhC,OACAC,UAGF,MAAO,CACLgB,SAAS,GAAD,mBAAMA,GAAN,CAAgBc,IACxBhB,OAAQ,GACRf,KAAM,GACNC,OAAQ,S,EAKdC,cAAgB,SAAA0B,GACd,IAAM5B,EAAO4B,EAAEK,OAAOjC,KACtB,EAAK8B,SAAL,eAAiB9B,EAAO4B,EAAEK,OAAOvB,MAAMwB,U,4CAGzC,WACE,IAAMC,EAAmBC,KAAKrB,OAC5BqB,KAAKd,MAAMP,OACXqB,KAAKd,MAAML,UAGb,OACE,gCACE,2CACA,cAAC,EAAD,CACEjB,KAAMoC,KAAKd,MAAMtB,KACjBC,OAAQmC,KAAKd,MAAMrB,OACnBC,cAAekC,KAAKlC,cACpBC,oBAAqBiC,KAAKjC,sBAG5B,0CACA,cAAC,EAAD,CAAQD,cAAekC,KAAKlC,gBAC5B,cAAC,EAAD,CAAae,SAAUkB,W,GAjEbE,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d6caf4db.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  width: 300px;\n  border: 2px solid #000;\n\n  label {\n    display: flex;\n    flex-direction: column;\n\n    &:not(:first-of-type) {\n      margin-top: 10px;\n    }\n  }\n\n  input {\n    margin-top: 4px;\n    width: 160px;\n\n    &:focus {\n      border: 2px solid #286fe0;\n      outline: none;\n    }\n  }\n\n  button {\n    margin-top: 20px;\n    padding: 4px;\n    max-width: 100px;\n    border: 0.2px solid #b7b7b7;\n    border-radius: 3px;\n    cursor: pointer;\n    transition: box-shadow 250ms linear, -webkit-box-shadow 250ms linear,\n      -moz-box-shadow 250ms linear;\n\n    &:hover {\n      -webkit-box-shadow: 0px 1px 3px 2px rgba(34, 60, 80, 0.2);\n      -moz-box-shadow: 0px 1px 3px 2px rgba(34, 60, 80, 0.2);\n      box-shadow: 0px 1px 3px 2px rgba(34, 60, 80, 0.2);\n    }\n\n    &:active {\n      color: #fff;\n      background-color: #286fe0;\n    }\n  }\n`;\n\nexport { Form };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from './ContactForm.styled';\n\nconst ContactForm = ({ name, number, onInputChange, onSubmitButtonClick }) => {\n  return (\n    <Form action=\"submit\">\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={onInputChange}\n          value={name}\n        />\n      </label>\n      <label>\n        Phone number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={onInputChange}\n          value={number}\n        />\n      </label>\n      <button type=\"submit\" onClick={onSubmitButtonClick}>\n        Add contact\n      </button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onSubmitButtonClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  input {\n    margin-top: 4px;\n    width: 160px;\n\n    &:focus {\n      border: 2px solid #286fe0;\n      outline: none;\n    }\n  }\n`;\n\nexport { Label };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from './Filter.styled';\n\nconst Filter = ({ filter, onInputChange }) => {\n  return (\n    <Label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={onInputChange}\n        value={filter}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onInputChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ contacts }) => {\n  return contacts.map(({ id, name, number }) => (\n    <li key={id}>{`${name}: ${number}`}</li>\n  ));\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <ul>\n      <ContactItem contacts={contacts} />\n    </ul>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {};\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  filter = (key, arrayOfObjects) => {\n    return arrayOfObjects.filter(elem =>\n      elem.name.toLowerCase().includes(key.toLowerCase()),\n    );\n  };\n\n  onSubmitButtonClick = e => {\n    e.preventDefault();\n\n    this.setState(({ contacts, name, number }) => {\n      if (!name || !number) {\n        return;\n      }\n\n      const contactToAdd = {\n        id: uuidv4(),\n        name,\n        number,\n      };\n\n      return {\n        contacts: [...contacts, contactToAdd],\n        filter: '',\n        name: '',\n        number: '',\n      };\n    });\n  };\n\n  onInputChange = e => {\n    const name = e.target.name;\n    this.setState({ [name]: e.target.value.trim() });\n  };\n\n  render() {\n    const filteredContacts = this.filter(\n      this.state.filter,\n      this.state.contacts,\n    );\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          name={this.state.name}\n          number={this.state.number}\n          onInputChange={this.onInputChange}\n          onSubmitButtonClick={this.onSubmitButtonClick}\n        />\n\n        <h2>Contacts</h2>\n        <Filter onInputChange={this.onInputChange} />\n        <ContactList contacts={filteredContacts} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}